import { FC } from 'react';
import { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';
import 'react-vertical-timeline-component/style.min.css';
import classes from './index.module.scss'
import { OppTable } from "../../opp-table/table";
import TypeWriter from 'typewriter-effect';
import { ArrowDownOutlined, ArrowUpOutlined, SoundOutlined } from '@ant-design/icons';
import { Statistic } from 'antd';


type TableData = Parameters<typeof OppTable>[0]['data'];
type Props = {
  leftData: TableData;
  rightData: TableData;
}

const renderTypeWriter = (text: string, sector: string) => <>
  <div className={classes.sound} onClick={() => playText(text)}><span>{sector}</span><SoundOutlined/></div>
  <TypeWriter options={getTypeWriterOptions(text)} />
</>

const img2 = ``
const img = `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`

export const Timeline: FC<Props> = ({ leftData, rightData }) => {
  return <div className={classes.root}>
    <div className={classes.agendaList}>
      
      <OppTable data={leftData} className={classes.agendaItem} companyName="滴滴出行" />
      <VerticalTimeline
        className={classes.timeline}
        lineColor={'transparent'}
      >
        <VerticalTimelineElement
          icon={<img src={`data:image/png;base64,${img}`} className={classes.avatar} />}
          position='left'
          iconClassName={classes.icon}
          intersectionObserverProps={{
            rootMargin: '0px 0px 40px 0px'
          }}
          style={{ marginTop: 40 }}
        >
          {renderTypeWriter('用户量相同，市场份额多13.3%，DAU/MAU/GMV差异不大，但获客成本少0.4$', 'Market')}
          <Statistic
            value={13.3}
            valueStyle={{ color: '#0f0' }}
            prefix={<ArrowUpOutlined />}
            suffix="%"
          />
        </VerticalTimelineElement>

        <VerticalTimelineElement
          icon={<img src={`data:image/png;base64,${img2}`} className={classes.avatar} />}
          position='right'
          style={{ marginTop: 200 }}
          iconClassName={classes.icon}
        >
          {renderTypeWriter('开通城市数量少4座，司机数量少5万', 'Operation')}
          <Statistic
            value={5}
            valueStyle={{ color: '#cf1322' }}
            prefix={<ArrowDownOutlined />}
            suffix='万'
          />
        </VerticalTimelineElement>
      </VerticalTimeline>
      <OppTable data={rightData} className={classes.agendaItem} isOnRight companyName="快的出行" />
    </div>
  </div>
}

function playText(text: string) {
  const msg = new SpeechSynthesisUtterance();
  msg.text = text;
  window.speechSynthesis.speak(msg);
}

function getTypeWriterOptions(text: string | string[]) {
  return {
    delay: 30,
    autoStart: true,
    strings: text,
  }
}
